<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper     
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cd.dota.dal.persistence.UserNewsRelationDAO">

	<resultMap type="com.cd.dota.dal.domain.UserNewsRelationDO"
		id="userNewsRelationResultMap">
		<id column="user_news_relation_id" property="userNewsRelationId" />
		<result column="user_id" property="userId" />
		<result column="news_id" property="newsId" />
		<result column="medium_id" property="mediumId" />
		<result column="is_like" property="isLike" />
		<result column="is_collect" property="isCollect" />
		<result column="is_share" property="isShare" />

		<result column="is_delete" property="isDelete" />
		<result column="create_time" property="createTime" />
		<result column="create_user" property="createUser" />
		<result column="update_time" property="updateTime" />
		<result column="update_user" property="updateUser" />
	</resultMap>

	<sql id="all_column">
		user_news_relation_id,user_id,news_id,is_like,is_collect,medium_id,is_share
		is_delete,create_time,create_user,update_time,update_user
	</sql>

	<insert id="addUserNewsRelation" parameterType="com.cd.dota.dal.domain.UserNewsRelationDO"
		useGeneratedKeys="true" keyProperty="userNewsRelationId">
		INSERT INTO
		user_news_relation
		(user_id,medium_id,news_id,is_like,is_collect,is_share,create_time,create_user)
		VALUES
		(#{userId},#{mediumId},#{newsId},#{isLike},#{isCollect},#{isShare},now(),#{createUser})
	</insert>


	<select id="selectUserNewsRelations" resultMap="userNewsRelationResultMap"
		parameterType="com.cd.dota.dal.domain.UserNewsRelationDO">
		SELECT
		<include refid="all_column" />
		FROM user_news_relation WHERE is_delete=0
		<if test="userId != null">
			AND user_id = #{userId}
		</if>
		<if test="isShare != null">
			AND is_share = #{isShare}
		</if>
		<if test="mediumId != null">
			AND medium_id = #{mediumId}
		</if>
		<if test="newsId != null">
			AND news_id = #{newsId}
		</if>
		<if test="isLike != null">
			AND is_like = #{isLike}
		</if>
		<if test="isCollect != null">
			AND is_collect = #{isCollect}
		</if>
		order by user_news_relation_id desc
		<if test="pageStartNum!=null and pageSize!=null">
			LIMIT #{pageStartNum},#{pageSize}
		</if>
	</select>


	<select id="selectUserNewsRelationById" parameterType="java.lang.Integer"
		resultMap="userNewsRelationResultMap">
		SELECT
		<include refid="all_column" />
		FROM user_news_relation WHERE user_news_relation_id =
		#{userNewsRelationId} AND is_delete=0
	</select>

	<update id="updateUserNewsRelation" parameterType="com.cd.dota.dal.domain.UserNewsRelationDO">
		UPDATE user_news_relation
		SET
		<if test="userId != null">
			user_id = #{userId},
		</if>
		<if test="mediumId != null">
			medium_id = #{mediumId},
		</if>
		<if test="newsId != null">
			news_id = #{newsId},
		</if>
		<if test="isLike != null">
			is_like = #{isLike},
		</if>
		<if test="isShare != null">
			is_share = #{isShare},
		</if>
		<if test="isCollect != null">
			is_collect = #{isCollect},
		</if>
		<if test="isDelete != null">
			is_delete = #{isDelete},
		</if>
		<if test="updateUser != null">
			update_user = #{updateUser},
		</if>
		update_time = now()
		WHERE is_delete = 0 AND user_news_relation_id =
		#{userNewsRelationId}
	</update>

	<select id="getCollection" resultMap="userNewsRelationResultMap"
		parameterType="com.cd.dota.dal.domain.UserNewsRelationDO">
		select a.name,a.logo,b.title from `medium` a,news b user_news_relation
		c where
		a.medium_id in (select medium_id from user_news_relation where user_id=#{userId}
		and is_collect = 1 and is_delete=0)
		and b.news_id in (select news_id from user_news_relation where
		user_id=#{userId} and is_collect = 1 and is_delete=0)
		order by
		c.user_news_relation_id desc
		<if test="pageStartNum!=null and pageSize!=null">
			LIMIT #{pageStartNum},#{pageSize}
		</if>
	</select>


</mapper> 